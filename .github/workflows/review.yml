name: Review

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - v*

concurrency:
  cancel-in-progress: true
  group: ${{ github.ref }}

jobs:

  ##############################################################################
  ## BUILD AND REGISTER BACKEND IMAGE
  ##############################################################################
  register-backend:
    name: Register backend
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Create image labels and tags
      id: docker_meta
      uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
      with:
        images: ghcr.io/socialgouv/${{ env.project }}/backend
        labels: |
          org.opencontainers.image.title=backend
          org.opencontainers.image.documentation=https://github.com/SocialGouv/${{ env.project }}/tree/${{ github.sha }}
        tags: |
          type=sha
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=raw,value=sha-${{ github.sha }}
          type=semver,pattern={{major}}.{{minor}}

    - name: Set up Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
      with:
        install: true

    - name: Registry authentication
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.SOCIALGROOVYBOT_NAME }}
        password: ${{ secrets.SOCIALGROOVYBOT_GHCR_PAT }}

    - name: Set buildx cache up
      uses: "actions/cache@v2"
      with:
        key: "${{ runner.os }}-buildx-backend-${{ hashFiles('back-strapi/Dockerfile') }}"
        path: /tmp/.buildx-backend-cache
        restore-keys: |
          ${{ runner.os }}-buildx-backend

    - name: Image build and register
      uses: docker/build-push-action@v2
      with:
        push: 'true'
        context: ./back-strapi
        builder: ${{ steps.buildx.outputs.name }}
        tags: "${{ steps.docker_meta.outputs.tags }}"
        labels: "${{ steps.docker_meta.outputs.labels }}"
        cache-to: "type=local,dest=/tmp/.buildx-backend-cache"
        cache-from: "type=local,src=/tmp/.buildx-backend-cache"

  ##############################################################################
  ## BUILD AND REGISTER FRONTEND IMAGE
  ##############################################################################
  register-frontend:
    name: Register frontend
    runs-on: ubuntu-latest
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get project name
      run: |
        echo "project=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - name: Create image labels and tags
      id: docker_meta
      uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
      with:
        images: ghcr.io/socialgouv/${{ env.project }}/frontend
        labels: |
          org.opencontainers.image.title=frontend
          org.opencontainers.image.documentation=https://github.com/SocialGouv/${{ env.project }}/tree/${{ github.sha }}
        tags: |
          type=sha
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{version}}
          type=raw,value=sha-${{ github.sha }}
          type=semver,pattern={{major}}.{{minor}}

    - name: Set up Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
      with:
        install: true

    - name: Registry authentication
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ secrets.SOCIALGROOVYBOT_NAME }}
        password: ${{ secrets.SOCIALGROOVYBOT_GHCR_PAT }}

    - name: Set buildx cache up
      uses: "actions/cache@v2"
      with:
        key: "${{ runner.os }}-buildx-frontend-${{ hashFiles('tumeplay-app/Dockerfile') }}"
        path: /tmp/.buildx-frontend-cache
        restore-keys: |
          ${{ runner.os }}-buildx-frontend

    - name: Image build and register
      uses: docker/build-push-action@v2
      with:
        push: 'true'
        context: ./tumeplay-app
        build-args: buildenv=dev.guyane
        builder: ${{ steps.buildx.outputs.name }}
        tags: "${{ steps.docker_meta.outputs.tags }}"
        labels: "${{ steps.docker_meta.outputs.labels }}"
        cache-to: "type=local,dest=/tmp/.buildx-frontend-cache"
        cache-from: "type=local,src=/tmp/.buildx-frontend-cache"
